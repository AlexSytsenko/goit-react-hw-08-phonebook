{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","helpers/routes.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","img/avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRouter.js","components/PublicRouter.js","App.js","index.js","components/Navigation/Navigation.module.scss","components/AuthNav/AuthNav.module.scss","components/UserMenu/UserMenu.module.scss","redux/auth/auth-actions.js","redux/auth/auth-operations.js","components/AppBar/AppBar.module.scss","redux/contacts/contacts-actions.js"],"names":["initialState","items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContactsRequest","fetchContactsError","setError","error","changeFilter","contactsReducer","combineReducers","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerRequest","registerError","loginRequest","loginError","logoutRequest","logoutError","getCurrentUserRequest","getCurrentUserError","token","getCurrentUsererror","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","routes","home","register","login","name","Navigation","useSelector","authSelectors","to","exact","className","styles","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","container","src","defaultAvatar","alt","width","avatar","button","type","onClick","authOperations","logout","AppBar","isLoggedIn","console","log","header","PrivateRoute","redirectTo","children","routeProps","defaultProps","PublicRoute","restricted","HomeView","lazy","ContactsView","LoginView","RegisterView","App","isLoading","selectors","useEffect","getCurrentUser","color","height","fallback","PublicRouter","path","ReactDOM","render","StrictMode","document","getElementById","module","exports","createAction","axios","defaults","baseURL","headers","common","Authorization","credentials","a","post","response","data","toast","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.11269401.chunk.js","sourcesContent":["import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: '',\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n\r\n  [fetchContactsSuccess]: (_, {payload}) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({id}) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n  [addContactError]: setError,\r\n  [deleteContactError]: setError,\r\n  [fetchContactsError]: setError,\r\n});\r\n\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  loading,\r\n  error,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n\r\n","import {combineReducers} from 'redux';\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  error: '',\r\n  isAuthenticated: false,\r\n  loading: false,\r\n};\r\n\r\nconst user = createReducer(initialState.user, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialState.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n  [authActions.registerRequest]: () => true,\r\n  [authActions.registerSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nconst token = createReducer(initialState.token, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUsererror]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(initialState.isAuthenticated, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUsererror]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n  loading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts'\r\n};\r\n\r\nexport default routes;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nconst getIsLoading = (state) => state.auth.loading;\r\n\r\nexport default { getIsAuthenticated, getUserName, getIsLoading };","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport routes from '../../helpers/routes';\r\nimport styles from './Navigation.module.scss';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst Navigation = () => {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to={routes.home}\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to={routes.contacts}\r\n          exact\r\n          className={styles.link}\r\n          activeClassName={styles.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport routes from '../../helpers/routes';\r\nimport styles from './AuthNav.module.scss';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to={routes.register}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Registration\r\n    </NavLink>\r\n    <NavLink\r\n      to={routes.login}\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/avatar.fb653606.png\";","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\n\r\nimport defaultAvatar from '../../img/avatar.png';\r\nimport styles from './UserMenu.module.scss';\r\n\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  const onLogout = () => {\r\n    dispatch(authOperations.logout());\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        src={defaultAvatar}\r\n        alt=\"user avatar\"\r\n        width=\"32\"\r\n        className={styles.avatar}\r\n      />\r\n      <span className={styles.name}>Welcome, {name}</span>\r\n      <button className={styles.button} type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const UserMenu = ({ avatar, name, onLogout }) => {\r\n//   return (\r\n//     <div className={styles.container}>\r\n//       <img\r\n//         src={avatar}\r\n//         alt=\"user avatar\"\r\n//         width=\"32\"\r\n//         className={styles.avatar}\r\n//       />\r\n//       <span className={styles.name}>Welcome, {name}</span>\r\n//       <button className={styles.button} type=\"button\" onClick={onLogout}>\r\n//         Logout\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// UserMenu.defaultProps = {\r\n//   avatar: defaultAvatar,\r\n// };\r\n\r\n// UserMenu.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   avatar: PropTypes.any,\r\n//   onLogout: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUserName(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logout,\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { useSelector } from 'react-redux';\r\n\r\nimport Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport styles from './AppBar.module.scss';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\n\r\nconst AppBar = () => {\r\n\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  \r\n  console.log(isLoggedIn);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n\r\n}\r\n\r\nexport default AppBar;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({ redirectTo, children, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nPrivateRoute.defaultProps = {\r\n  routeProps: null,\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  redirectTo: PropTypes.string.isRequired,\r\n  routeProps: PropTypes.any,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({ redirectTo, children, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n};\r\n\r\nPublicRoute.defaultProps = {\r\n  redirectTo: null,\r\n  routeProps: null,\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  redirectTo: PropTypes.string,\r\n  routeProps: PropTypes.any,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { Switch } from 'react-router-dom';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport routes from './helpers/routes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport './styles/container.scss';\r\nimport AppBar from './components/AppBar';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport PrivateRoute from './components/PrivateRouter';\r\nimport PublicRouter from './components/PublicRouter';\r\nimport selectors from './redux/auth/auth-selectors';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('./views/HomeView' /* webpackChunkName: \"Home-page\" */),\r\n);\r\nconst ContactsView = lazy(() =>\r\n  import('./views/ContactsView' /* webpackChunkName: \"Contacts-page\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n  import('./views/LoginView' /* webpackChunkName: \"Login-page\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import('./views/RegisterView' /* webpackChunkName: \"Register-page\" */),\r\n);\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectors.getIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <ToastContainer />\r\n      <div className=\"container\">\r\n        {isLoading && (\r\n          <Loader type=\"Puff\" color=\"#C48613\" height={75} width={75} />\r\n        )}\r\n        <Suspense\r\n          fallback={\r\n            <Loader type=\"Puff\" color=\"#C48613\" height={75} width={75} />\r\n          }\r\n        >\r\n          <Switch>\r\n            <PublicRouter exact path={routes.home}>\r\n              <HomeView />\r\n            </PublicRouter>\r\n\r\n            <PublicRouter\r\n              path={routes.register}\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n            >\r\n              <RegisterView />\r\n            </PublicRouter>\r\n            <PublicRouter\r\n              path={routes.login}\r\n              restricted\r\n              redirectTo={routes.contacts}\r\n            >\r\n              <LoginView />\r\n            </PublicRouter>\r\n            <PrivateRoute\r\n              path={routes.home}\r\n              redirectTo={routes.login}\r\n            >\r\n              <ContactsView />\r\n              </PrivateRoute>\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport store from './redux/store';\r\nimport './styles/base.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__MKy2i\",\"activeLink\":\"Navigation_activeLink__1K5qY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3OdN-\",\"activeLink\":\"AuthNav_activeLink__FcjIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UserMenu_button__31f9Q\",\"container\":\"UserMenu_container__BDdSC\",\"avatar\":\"UserMenu_avatar__1HW3K\",\"name\":\"UserMenu_name__2bAMT\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken }\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return\r\n  };\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n\r\n};\r\n\r\nexport default { register, logIn, logout, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__IyJtw\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('conatacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('conatacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('conatacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('conatacts/addContactRequest');\r\nexport const addContactSuccess = createAction('conatacts/addContactSuccess');\r\nexport const addContactError = createAction('conatacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('conatacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('conatacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('conatacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('conatacts/filter');\r\nexport const clearContactsError = createAction('conatacts/clearContactsError');\r\n"],"sourceRoot":""}