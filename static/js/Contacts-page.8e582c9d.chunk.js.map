{"version":3,"sources":["components/Form/Form.module.scss","components/FilterContacts/FilterContacts.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactsList/ContactsList.module.scss","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/FilterContacts/FilterContacts.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","views/ContactsView/ContactsView.jsx"],"names":["module","exports","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","response","fetchContactsSuccess","data","toast","error","message","fetchContactsError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","contact","addContactRequest","post","addContactSuccess","addContactError","getFilter","state","contacts","filter","getAllContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","loading","Form","useDispatch","useSelector","selectors","useState","number","setNumber","setName","handleChangeForm","e","currentTarget","value","isUniqueContact","find","reset","className","styles","form","onSubmit","preventDefault","warning","operations","label","input","type","pattern","title","required","onChange","button","FilterContacts","useCallback","actions","ContactsItem","item","id","onDeleteContact","contact__item","contact__text","contact__button","onClick","ContactsList","useEffect","contacts__list","map","ContactsView","isLoading","color","height","width"],"mappings":"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","file":"static/js/Contacts-page.8e582c9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__Y1Myj\",\"label\":\"Form_label__2Jv3F\",\"input\":\"Form_input__h6x22\",\"form\":\"Form_form__2oeCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__1kl4F\",\"input\":\"FilterContacts_input__1X1Yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"ContactItem_contact__button__IVZc8\",\"contact__item\":\"ContactItem_contact__item__2gl5z\",\"contact__text\":\"ContactItem_contact__text__1qT8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__YCCZk\"};","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(response.data));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/contacts', contact);\r\n\r\n    dispatch(addContactSuccess(response.data));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    toast.error(error.message);\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector }  from '@reduxjs/toolkit'\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\n//Мемоизация\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    if (!filter) {\r\n      return contacts;\r\n    }\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getFilter,\r\n  getAllContacts,\r\n  getVisibleContacts,\r\n};\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport operations from '../../redux/contacts/contacts-operations';\r\nimport selectors from '../../redux/contacts/contacts-selectors';\r\nimport styles from './Form.module.scss';\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectors.getAllContacts);\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChangeForm = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (isUniqueContact()) {\r\n      const message = `${name} is already in contacts.`;\r\n\r\n      return toast.warning(message);\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(operations.addContact(newContact));\r\n    reset();\r\n  };\r\n\r\n  const isUniqueContact = () => {\r\n    return contacts.find(contact => contact.name === name);\r\n  };\r\n\r\n  const reset = () => {\r\n    setNumber('');\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChangeForm}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Phone number must be 11-12 digits long and can contain numbers, spaces, dashes, pot-bellied brackets and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChangeForm}\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useCallback } from 'react';\r\n\r\nimport * as actions from '../../redux/contacts/contacts-actions';\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\nimport styles from './FilterContacts.module.scss';\r\n\r\nconst FilterContacts = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(selectors.getFilter);\r\n\r\n  const onChange = useCallback(\r\n    e => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n    [dispatch],\r\n  );\r\n \r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FilterContacts;\r\n","import { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\nimport * as operations from '../../redux/contacts/contacts-operations';\r\nimport styles from './ContactItem.module.scss';\r\n\r\nconst ContactsItem = ({ value }) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectors.getAllContacts);\r\n  const contact = contacts.filter(item => item.id === value)[0];\r\n  const { name, number } = contact;\r\n\r\n  const onDeleteContact = useCallback(\r\n    () => dispatch(operations.deleteContact(value)),\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <li className={styles.contact__item}>\r\n      <p className={styles.contact__text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={styles.contact__button}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      >\r\n        <DeleteIcon />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsItem.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactsItem;\r\n\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ContactsItem from '../ContactItem';\r\nimport * as operations from '../../redux/contacts/contacts-operations';\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\nimport styles from './ContactsList.module.scss';\r\n\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n\r\n  useEffect(() => dispatch(operations.fetchContacts()), []);\r\n  return (\r\n    <ul className={styles.contacts__list}>\r\n      {contacts.map(({ id }) => (\r\n        <ContactsItem key={id} value={id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default ContactsList;\r\n\r\n","\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nimport Form from '../../components/Form';\r\nimport FilterContacts from '../../components/FilterContacts';\r\nimport ContactsList from '../../components/ContactsList';\r\nimport selectors from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactsView = () => {\r\n  const isLoading = useSelector(selectors.getLoading);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"title title__main\">Phonebook</h2>\r\n      <Form />\r\n      {isLoading && (\r\n        <Loader type=\"Puff\" color=\"#C48613\" height={75} width={75} />\r\n      )}\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <FilterContacts />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}