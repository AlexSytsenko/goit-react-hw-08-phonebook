{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView/RegisterView.module.scss","views/RegisterView/RegisterView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","currentTarget","reset","className","styles","title","onSubmit","preventDefault","authOperations","register","form","autoComplete","label","input","type","onChange","button"],"mappings":"wKAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,OAAS,6BAA6B,MAAQ,4BAA4B,MAAQ,4BAA4B,MAAQ,4BAA4B,KAAO,6B,6ICgG5JC,EA1FM,WACnB,IAAMC,EAAWC,cADQ,EAEDC,mBAAS,IAFR,mBAElBC,EAFkB,KAEZC,EAFY,OAGCF,mBAAS,IAHV,mBAGlBG,EAHkB,KAGXC,EAHW,OAIOJ,mBAAS,IAJhB,mBAIlBK,EAJkB,KAIRC,EAJQ,KAMnBC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,cAAlBR,EADgB,EAChBA,KAAMX,EADU,EACVA,MAEd,OAAQW,GACN,IAAK,OACHC,EAAQZ,GACR,MAEF,IAAK,QACHc,EAASd,GACT,MAEF,IAAK,WACHgB,EAAYhB,KAeZoB,EAAQ,WACZR,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,gCACE,oBAAIK,UAAWC,IAAOC,MAAtB,+BAEA,uBACEC,SAlBe,SAAAN,GACnBA,EAAEO,iBAEFjB,EAASkB,IAAeC,SAAS,CAAEhB,OAAME,QAAOE,cAChDK,KAeIC,UAAWC,IAAOM,KAClBC,aAAa,MAHf,UAKE,wBAAOR,UAAWC,IAAOQ,MAAzB,iBAEE,uBACET,UAAWC,IAAOS,MAClBC,KAAK,OACLrB,KAAK,OACLX,MAAOW,EACPsB,SAAUhB,OAId,wBAAOI,UAAWC,IAAOQ,MAAzB,kBAEE,uBACET,UAAWC,IAAOS,MAClBC,KAAK,QACLrB,KAAK,QACLX,MAAOa,EACPoB,SAAUhB,OAId,wBAAOI,UAAWC,IAAOQ,MAAzB,qBAEE,uBACET,UAAWC,IAAOS,MAClBC,KAAK,WACLrB,KAAK,WACLX,MAAOe,EACPkB,SAAUhB,OAId,wBAAQe,KAAK,SAASX,UAAWC,IAAOY,OAAxC","file":"static/js/Register-page.0cd50177.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RegisterView_button__1Ir5j\",\"label\":\"RegisterView_label__E_RXK\",\"input\":\"RegisterView_input__1Rvnm\",\"title\":\"RegisterView_title__1LeJH\",\"form\":\"RegisterView_form__32MT1\"};","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport styles from './RegisterView.module.scss';\r\n\r\n\r\nconst RegisterView = () => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      \r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title}>Registration page</h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className={styles.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Email\r\n          <input\r\n            className={styles.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Password\r\n          <input\r\n            className={styles.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.button}>\r\n          Register new user\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n\r\n"],"sourceRoot":""}